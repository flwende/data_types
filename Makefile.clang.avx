CXX = clang++
LD = clang++

INTELROOT = $(HOME)/opt/intel/compilers_and_libraries_2019/linux
CUDAROOT = $(HOME)/opt/nvidia/cuda
INC = -I./include -I./src/include
#CXXFLAGS = -O3 -std=c++17 -stdlib=libc++ -mavx2 -fopenmp=libiomp5 -fveclib=SVML -ftree-vectorize -ffast-math -Rpass=loop-vectorize $(INC)
CXXFLAGS = -O3 -std=c++17 -mavx2 -fopenmp=libiomp5 -fveclib=SVML -ftree-vectorize -ffast-math -Rpass=loop-vectorize $(INC)
LDFLAGS = -O3 -fopenmp -L$(INTELROOT)/lib/intel64 -lsvml -lintlc

CXXFLAGS += -stdlib=libc++ --cuda-gpu-arch=sm_20 -I$(CUDAROOT)/include -nocudalib --cuda-path=$(CUDAROOT)
#CXXFLAGS += --cuda-gpu-arch=sm_61 -I$(CUDAROOT)/include -nocudalib -D_GNU_SOURCE
LDFLAGS += -nocudalib -L$(CUDAROOT)/lib64 -ldl -lrt -pthread

#CXXFLAGS += -DCHECK_RESULTS
#CXXFLAGS += -DAOS_LAYOUT
#CXXFLAGS += -DSOA_LAYOUT
CXXFLAGS += -DSOAI_LAYOUT
#CXXFLAGS += -DELEMENT_ACCESS
#CXXFLAGS += -DINPLACE
#CXXFLAGS += -DVECTOR_PRODUCT

target: bin/benchmark.x

bin/benchmark.x: obj/benchmark.o
	$(LD) $(LDFLAGS) -o $@ $^

obj/benchmark.o: src/benchmark.cu
	$(CXX) $(CXXFLAGS) -o $@ -c $<

clean:
	rm -f *~ obj/*.o bin/benchmark.x

